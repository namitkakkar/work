define(["require","exports","knockout","ojs/ojrouter","ojs/ojarraydataprovider","../ampCommon/tasklist/Task","ojs/ojmodule-element-utils","ojs/ojmodule-element-utils","ojs/ojknockout","ojs/ojmodule-element","ojs/ojnavigationlist","ojs/ojknockout","ojs/ojselectcombobox","ojs/ojtable","ojs/ojpopup","ojs/ojbutton"],(function(require,e,t,o,a,i,n,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function e(){var e=this;this.cancelListener=function(){document.getElementById("remarksPopup").close()},this.onSubmit=function(t){e.task().updateTaskOutcome("Submit",(function(e){window.close()}),(function(e){alert("Please contact to administrator")}))},this.onSave=function(){console.log("Calling Global Save"),e.task().saveWorkUnitDetails()};var r=this;r.task=t.observable(i.Task.getInstance()),r.router=o.rootInstance,r.workUnitNumber="",r.selectedAIN=t.observable(),r.workUnitDataProvider=t.observable(),r.ainDataSource=t.observableArray([]),r.ainArray=t.observableArray(),r.task=t.observable(i.Task.getInstance()),r.nextAssignmentPool=t.observable(),r.moduleConfig=t.observable({view:[],viewModel:null}),Promise.all([n.createView({viewPath:"views/CaseManagement.html"}),n.createViewModel({viewModelPath:"viewModels/CaseManagement"})]).then((function(e){r.moduleConfig({view:e[0],viewModel:e[1].default})}));var c=[new l({name:"Case Management",id:"CaseManagement",iconClass:"oj-navigationlist-item-icon demo-icon-font-24 demo-chart-icon-24"}),new l({name:"Record Maintainance",id:"RecordMaintainance",iconClass:"oj-navigationlist-item-icon demo-icon-font-24 demo-chart-icon-24"}),new l({name:"Eligibility Determination",id:"EligibilityDetermination",iconClass:"oj-navigationlist-item-icon demo-icon-font-24 demo-chart-icon-24"}),new l({name:"Appraisal",id:"Appraisal",iconClass:"oj-navigationlist-item-icon demo-icon-font-24 demo-chart-icon-24"}),new l({name:"Assessment",id:"Assessment",iconClass:"oj-navigationlist-item-icon demo-icon-font-24 demo-chart-icon-24"})];r.navDataSource=new a(c,{idAttribute:"id"}),r.workUnitColumnArray=t.observableArray([new d({headerText:"Business Event Date",field:"CREATED_DATE"}),new d({headerText:"Category",field:"CATEGORY"}),new d({headerText:"Sub Category",field:"SUBCATEGORY"}),new d({headerText:"Work Unit Type",field:"WORK_UNIT_TYPE"}),new d({headerText:"Work Unit Status",field:"STATUS"}),new d({headerText:"Assignment Pool",field:"ASSIGNMENT_POOL"}),new d({headerText:"AAU Name",field:""}),new d({headerText:"AAU Relationship Type",field:""})]),t.computed((function(){void 0!==r.task().task()&&r.task().task().payload.GCMWorkTask.EventParameterList.EventParameter.forEach((function(e){null!=e.Name&&"NextAssignmentPool"==e.Name&&void 0!==e.Value&&r.nextAssignmentPool(e.Value)})),void 0!==r.task().workUnitDetailsList()&&r.task().workUnitDetailsList().length>0&&(r.workUnitNumber=r.task().workUnitDetailsList()[0].WU_NUMBER,r.workUnitDataProvider(new a(r.task().workUnitDetailsList(),{idAttribute:"WU_NUMBER"})),r.ainArray(r.task().workUnitDetailsList()[0].WU_AO),r.ainArray().forEach((function(e){r.ainDataSource.push({label:e.AIN,value:e.AIN})})),r.selectedAIN(r.ainDataSource()[0].value))})),this.remarksPopupModuleConfig=t.observable({view:[],viewModel:null}),Promise.all([s.createView({viewPath:"views/Remarks.html"}),s.createViewModel({viewModelPath:"viewModels/Remarks"})]).then((function(t){e.remarksPopupModuleConfig({view:t[0],viewModel:t[1].default})}))}return e.prototype.addRemarks=function(){this.openRemarksPopUp()},e.prototype.openRemarksPopUp=function(){document.getElementById("remarksPopup").open("#btnAddRemarks")},e.prototype.connected=function(){},e}(),l=function(e){var t=e.id,o=e.name,a=e.iconClass;this.id=t,this.name=o,this.iconClass=a},d=function(e){var t=e.headerText,o=e.field;this.headerText=t,this.field=o,this.resizable="enabled"};e.default=r}));